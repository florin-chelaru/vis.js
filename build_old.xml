<?xml version="1.0"?>
<project>
  <target name="concatenate" description="Concatenate css files">
	<echo message="Generate concatenated stylesheet: vis.css" />
    <concat destfile="vis.css">
      <fileset dir="res/css" includes="*.css" excludes="*.min.css" />
    </concat>
  </target>

  <target name="compress" depends="concatenate" description="Compress vis.css to vis.min.css">
	<echo message="Minify vis.css -> vis.min.css" />
	<java jar="node_modules/yuicompressor/build/yuicompressor-2.4.8.jar" fork="true">
        <arg value="vis.css" /> <!-- input path for CSS files -->
        <!--<arg value="-v" />--> <!-- Turn on verbose -->
        <arg value="-o" />
        <arg value="vis.min.css" /> <!-- output path for CSS files -->
    </java>
	<delete file="vis.css"/>
  </target>


  <property name="rootpath" value="."/>
  <property name="rootdir" location="${rootpath}"/>
  <property name="bin" value="."/>
  <property name="level" value="SIMPLE_OPTIMIZATIONS"/>
  <property name="src" value="${rootpath}/third-party/bigwig/src"/>
  <property name="vendor" value="${rootpath}/bower_components/closure-compiler/lib/vendor"/>
  <property name="compiler" value="${vendor}/compiler.jar"/>
  <property name="closure_primitives" value="${rootpath}/bower_components/google-closure-library/closure/goog/base.js"/>
  <property name="depswriter" value="${rootpath}/bower_components/google-closure-library/closure/bin/build/depswriter.py"/>
  <property name="depend" value="${rootpath}/deps.js"/>
  <property name="export" value="${rootpath}/third-party/bigwig/export"/>
  <property name="externs" value="${rootpath}/third-party/bigwig/externs/externs.js"/>

  <!-- -->
  <!--<loadfile property="license" srcfile="../LICENSE_min"/>-->

  <!--  -->
  <target name="prebuild" description="">
     <!--<mkdir dir="${bin}"/>-->
  </target>

  <!--  -->
  <target name="deps" description="">
    <exec executable="python" failonerror="true">
      <arg line="${depswriter}"/>
      <arg line="--root_with_prefix=&quot;./ ../../../../third-party/bigwig/src&quot;"/>
      <arg line="--output_file=${depend}"/>
    </exec>

    <pathconvert property="srcfiles" pathsep=" ">
      <map from="${rootdir}" to="--js ./"/>
      <fileset dir="${src}" includes="*.js"/>
    </pathconvert>

    <pathconvert property="exportfiles" pathsep=" ">
      <map from="${rootdir}" to="--js .."/>
      <fileset dir="${export}" includes="*.js"/>
    </pathconvert>
  </target>

  <target name="bigwig" depends="deps" description="">
    <local name="basename"/>
    <property name="basename" value="bigwig.min.js"/>
    <local name="outfile"/>
    <property name="outfile" value="${basename}"/>
    <java jar="${compiler}" fork="true" failonerror="true">
      <arg line="--compilation_level=${level}"/>
      <arg line="--warning_level=VERBOSE"/>
      <arg line="--define=goog.DEBUG=false"/>
      <arg line="--summary_detail_level=3"/>
      <arg line="--language_in=ECMASCRIPT5_STRICT"/>
      <arg line="--source_map_format=V3"/>
      <arg line="--output_wrapper='/** LICENSE */(function() {%output%}).call(this); //@ sourceMappingURL=${basename}.map'"/>
      <arg line="--js_output_file=${outfile}"/>
      <arg line="--create_source_map=${outfile}.map"/>
      <arg line="--manage_closure_dependencies"/>
      <arg line="--js=${export}/bigwig.js"/>
      <!--<arg line="-js=${closure_primitives}"/>-->
	  <arg line="--externs=${externs}"/>
      <arg line="${srcfiles}"/>
    </java>
  </target>
</project>
